SELECT  aip.accounting_date   accounting_date,
        aid.attribute8 airline,
        DECODE(aid.attribute_category,'Asset', aid.attribute4, NULL) asset_number ,
        aid.attribute10  ato_number,
        DECODE(aid.attribute_category, 'Training', aid.attribute4, NULL) attendee,
        ai.cancelled_date  cancelled_date,
        ac.amount  check_amount,
        ac.check_number check_num,
        ac.cleared_date  check_cleared_date,
        aid.attribute5 departure,
        DECODE(aid.attribute_category, 'Travel', aid.attribute4, NULL) destination,
        NVL(gjl.accounted_dr, 0) - NVL(gjl.accounted_cr, 0)  distribution_amount,
        NVL(aid.description, gjl.description) distribution_description,
        gcc.segment1,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,1,gcc.segment1),1,40) segment1_desc,
        gcc.segment2,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,2,gcc.segment1),2,40) segment1_desc,
        gcc.segment3,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,3,gcc.segment1),3,40) segment1_desc,
        gcc.segment4,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,4,gcc.segment1),4,40) segment1_desc,
        gcc.segment5,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,5,gcc.segment1),5,40) segment1_desc,
        gcc.segment6,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,6,gcc.segment1),6,40) segment1_desc,
        gcc.segment7,
        SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,7,gcc.segment1),7,40) segment1_desc,
        gcc.segment8 spare1,
		SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,8,gcc.segment1),8,40) segment1_desc,
        gcc.segment9 spare2,
		SUBSTR(apps.gl_flexfields_pkg.get_description_sql( gcc.chart_of_accounts_id,9,gcc.segment1),9,40) segment1_desc,
        NVL(gjl.accounted_cr,  0) gl_accounted_cr,
        NVL(gjl.accounted_dr,  0) gl_accounted_dr,
        ai.gl_date gl_date,
        gjl.effective_date gl_effective_date ,
        gjh.je_source  gl_source,
        DECODE(AI.invoice_currency_code,  'EUR',  AI.invoice_amount,  AI.base_amount) invoice_amount,
        NVL(ai.description,  gjh.description)  invoice_description,
        aid.attribute_category invoice_line_type,
        ai.invoice_num invoice_num,
        ac.checkrun_name   payment_batch_name,
        ac.check_date payment_date,
        gjh.period_name period_name,
        aid.attribute6 RETURN,
        gsb.name,
        aid.attribute7 traveller,
        pv.vendor_name,
        gjh.je_header_id,
        gjl.je_line_num,
        gcc.code_combination_id,
        ai.invoice_id,
        aid.po_distribution_id,
        ac.check_id,
        aip.invoice_payment_id,
        pv.vendor_id
FROM    gl_je_headers gjh,
        gl_je_lines gjl,
        ap_ae_lines ael,
        ap_invoice_payments aip,
        ap_invoices ai,
        ap_invoice_distributions aid,
        ap_checks ac,
        po_vendors pv,
        gl_sets_of_books gsb,
        gl_code_combinations gcc
WHERE   gjh.je_header_id = gjl.je_header_id   
AND     gjl.code_combination_id = gcc.code_combination_id   
AND     gjl.gl_sl_link_id = ael.gl_sl_link_id (+)   
AND     ael.source_table (+) =  'AP_INVOICE_PAYMENTS'   
AND     ael.source_id = aip.invoice_payment_id (+)   
AND     ael.account_overlay_source_id  = aid.invoice_distribution_id (+)   
AND     aid.invoice_id = ai.invoice_id(+)   
AND     aip.check_id = ac.check_id(+)   
AND     gjh.posted_date IS NOT NULL   
AND     ai.vendor_id = pv.vendor_id (+)   
AND     gjl.set_of_books_id = gsb.set_of_books_id   
